; Commnons for Community Networks Installers
; Copyright 2013 by Community Networks S.L.
; Ignacio Cea Forniés

#define MyAppPublisher "Community Networks"
#define MyAppURL "http://www.commnets.com"
#define MyCopyright "Copyright 2009 - 2022 by Community Networks"
#define MyAppVersion "0.2.000-beta"
#define CompilerPath '\'

[Setup]
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf}{#CompilerPath}{#MyAppPublisher}{#CompilerPath}{#MyAppName}
DefaultGroupName=Commnets Games
AllowNoIcons=yes
LicenseFile=..\Commons\LICENSE.rtf
InfoAfterFile=README.txt
OutputDir=output
OutputBaseFilename={#MyAppName}
Compression=lzma
SolidCompression=yes
WizardImageFile=..\Commons\Installer Background Image.bmp
WizardSmallImageFile=..\Commons\Letra C Community HD small.bmp
UserInfoPage=True
VersionInfoCompany=Community Networks S.L.
VersionInfoCopyright=2020 - 2022 Community Networks S.L.
VersionInfoDescription=MyProductInfo
VersionInfoProductName=MyProductName
WizardImageStretch=False
AppCopyright={#MyCopyright}
AppContact=ignacio.cea.fornies@gmail.com
UninstallDisplayName={#MyAppName} {#MyAppVersion}
UninstallDisplaySize=1073741824
PrivilegesRequired=admin
UsedUserAreasWarning=no

[Files]
Source: "..\Commons\LICENSE.rtf"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\vc_redist.x86.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\SDL2.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\SDL2_gfx.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\SDL2_image.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\SDL2_mixer.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\SDL2_ttf.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Commons\RakNet_VS2008_DLL_Release_Win32.dll"; DestDir: "{app}"; Flags: ignoreversion


[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Flags: nowait postinstall skipifsilent; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"
Filename: "{app}\vc_redist.x86.exe"; WorkingDir: "{app}"; Flags: postinstall skipifsilent nowait; Description: "VS2022 C++ Redistribuible Package"

[Dirs]

[CustomMessages]
english.windowLicensePageTitle=License file
spanish.windowLicensePageTitle=Fichero de licencias
english.windowLicensePageSubtitle=Where is the license file?
spanish.windowLicensePageSubtitle=¿Dónde está el fichero de licencias?
english.windowLicensePageCap=Any Community Networks game needs a license file generated by Community Networks to run. The file has been provided by the manufacturer when you bought the application. If you don't have this file, please contact Community Networks. NOTE: This is an free version of the game, so any text file (even empty) will be valid!
spanish.windowLicensePageCap=Cualquier juego Community Networks necesita un fichero de licencias generado por Community Networks para funcionar. El fabricante le proporcionó este fichero cuando compró la aplicación. Si usted no dispone de este fichero, por favor contacte con Community Networks. NOTA: ¡Esto es una versión libre del juego, por lo que cualquier fichero (incluso vacío) será válido!
english.windowLicensePageField=Select where the license file is:
spanish.windowLicensePageField=Seleccione dónde está el fichero de licencias:
english.licensePageError=License file doesn't exist. Please double check
spanish.licensePageError=El fichero de licencias no existe. Por favor vuelva a comprobarlo
english.windowDataDialogTitle=Select Data Directory
spanish.windowDataDialogTitle=Seleccione el Directorio de Datos
english.windowDataDialogSubtitle=Where temporal data files will be located?
spanish.windowDataDialogSubtitle=¿Dónde se localizarán los ficheros de datos temporales?
english.windowDataDialogCap=Select the folder in which the executable should locate data files, then click Next. The game creates temporal files. Choose a folder with rights to write. Otherwise the game will not work.
spanish.windowDataDialogCap=Seleccione el directorio en el cual el ejecutable guardará sus datos de funcionamiento, y entonces pulse Siguiente. El juego crea ficheros temporales. Elija una carpeta con derechos de escritura o el juego no funcionará.
english.windowSizeDialogTitle=Scale of the text and graphics
spanish.windowSizeDialogTitle=Escala de texto y gráficos
english.windowSizeDialogSubtitle=Which is the scale of your grahics system?
spanish.windowSizeDialogSubtitle=¿Cúal es la escala de su sistema de gráficos?
english.windowSizeDialogCap=Please introduce the scale of the text and graphics your system is using (e.g. 1.0 (100%), 2.5 (250%)...). You can check it at Congiguration -> System -> Display -> Scale and layout
spanish.windowSizeDialogCap=Por favor introduzca la escala de texto y gráficos que su sistema está usando (ej. 1.0 (100%), 2.5 (250%)...). Puedes comprobarlo en Configuración -> Sistema -> Pantalla -> Escala y distribución
english.windowSizeScaleField=Scale:
spanish.windowSizeScaleField=Escala:
english.windowSizeDialogError=The scale introduced is not valid. Please, introduce it again
spanish.windowSizeDialogError=La escala introducida no es válida. Por favor, introdúzcala de nuevo
english.selectionDir=Directory Selection
spanish.selectionDir=Seleccionar Directorio
english.aboutText=About...
spanish.aboutText=Acerca de...

[Code]
{ Begin of code }

Var
  _licensePage: TInputFileWizardPage;
  _dataDirPage: TInputDirWizardPage;
  _scalePage: TInputQueryWizardPage;

{ Function to select a directory. }
Function selectDirectory (origin: String): String;
Var
  _form: TSetupForm;
  _treeView: TFolderTreeView;
  _okButton, _cancelButton: TNewButton;

Begin

  _form := CreateCustomForm ();
  _form.ClientWidth := ScaleX (400);
  _form.ClientHeight := ScaleY (512);
  _form.Caption := ExpandConstant ('{cm:selectionDir}');
  _form.FlipSizeAndCenterIfNeeded (False, WizardForm, False);

  _treeView := TFolderTreeView.Create (_form);
  _treeView.Width := _form.ClientWidth;
  _treeView.Height := _form.ClientHeight - ScaleY (50);
  _treeView.Parent := _form;
  _treeView.Directory := origin;

  _okButton := TNewButton.Create (_form);
  _okButton.Parent := _form;
  _okButton.Width := ScaleX (75);
  _okButton.Height := ScaleY (23);
  _okButton.Left := _form.ClientWidth - ScaleX (75 + 6 + 75 + 10);
  _okButton.Top := _form.ClientHeight - ScaleY (23 + 10);
  _okButton.Caption := 'OK';
  _okButton.ModalResult := mrOk;
  _okButton.Default := True;

  _cancelButton := TNewButton.Create (_form);
  _cancelButton.Parent := _form;
  _cancelButton.Width := ScaleX (75);
  _cancelButton.Height := ScaleY (23);
  _cancelButton.Left := _form.ClientWidth - ScaleX (75 + 10);
  _cancelButton.Top := _form.ClientHeight - ScaleY (23 + 10);
  _cancelButton.Caption := 'Cancel';
  _cancelButton.ModalResult := mrCancel;
  _cancelButton.Cancel := True;

  _form.ActiveControl := _treeView;

  Result := '';
  If (_form.ShowModal () = mrOk) Then
    Result := _treeView.Directory;

End;

{ Procedure executed when the about button is pressed 
  during the installation. }
Procedure AboutButtonOnClick (Sender: TObject);
Begin
  MsgBox ('Community Networks Installer. Version 2.0.000', mbInformation, mb_Ok);
End;

{ Procedure executed when the link to the page of community is pressed
  during the installation. This link is at the botton of the page. }
Procedure URLLabelOnClick (Sender: TObject);
Var
  ErrorCode: Integer;
Begin
  ShellExecAsOriginalUser ('open', 'https://sourceforge.net/u/igcefo/profile/', '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode);
End;

{ Procedure to add an about button and a link to community networks' 
  home page at the end of a window. Tose two buttons are usually added 
  at the botton of the wizard. }
Procedure CreateAboutButtonAndURLLabel (ParentForm: TSetupForm; 
  CancelButton: TNewButton);
Var
  _aboutButton: TNewButton;
  _urlLabel: TNewStaticText;
Begin
  _aboutButton := TNewButton.Create (ParentForm);
  _aboutButton.Left := ParentForm.ClientWidth - CancelButton.Left - CancelButton.Width;
  _aboutButton.Top := CancelButton.Top;
  _aboutButton.Width := CancelButton.Width;
  _aboutButton.Height := CancelButton.Height;
  _aboutButton.Caption := ExpandConstant ('{cm:aboutText}');
  _aboutButton.OnClick := @AboutButtonOnClick;
  _aboutButton.Parent := ParentForm;

  _urlLabel := TNewStaticText.Create(ParentForm);
  _urlLabel.Caption := 'www.commnets.com';
  _urlLabel.Cursor := crHand;
  _urlLabel.OnClick := @URLLabelOnClick;
  _urlLabel.Parent := ParentForm;
  
  { Alter Font *after* setting Parent so the correct defaults are inherited first }
  _urlLabel.Font.Style := _urlLabel.Font.Style + [fsUnderline];
  If (GetWindowsVersion >= $040A0000) then   { Windows 98 or later? }
    _urlLabel.Font.Color := clHotLight
  Else
    _urlLabel.Font.Color := clBlue;
  
  _urlLabel.Top := _aboutButton.Top + _aboutButton.Height - _urlLabel.Height - 2;
  _urlLabel.Left := _aboutButton.Left + _aboutButton.Width + ScaleX (10);
End;

{ Method to create a page to select where the licences file is
  and copy it into the right place for the application to read it when start.
  This should be the first page in the system... }
Procedure addLicensePage;
Begin

  _licensePage := CreateInputFilePage (wpLicense,
    ExpandConstant ('{cm:windowLicensePageTitle}'),
    ExpandConstant ('{cm:windowLicensePageSubtitle}'),
    ExpandConstant ('{cm:windowLicensePageCap}'));
  _licensePage.Add (ExpandConstant ('{cm:windowLicensePageField}'), 
    '*.*', '.licenses'); { Adds an item with an empty caption }
  _licensePage.Values [0] := '';

End;

{ Method to create a page to ask for a data directory.
  The method has to be call from the InitializeWizard procedure in
  the main installation inno setup program }
Procedure addDataDirPage;
Begin

  { ...then the a page to select trhe data directory is introduced.
    The message shown depends on the languaje selected by the user. }
  _dataDirPage := CreateInputDirPage (wpSelectDir,
    ExpandConstant ('{cm:windowDataDialogTitle}'), 
    ExpandConstant ('{cm:windowDataDialogSubtitle}'),
    ExpandConstant ('{cm:windowDataDialogCap}'),
    False, ExpandConstant ('{commonpf}'));
  _dataDirPage.Add ('');  { Adds an item with an empty caption. }
  _dataDirPage.Values [0] := GetPreviousData ('DataDir', ExpandConstant ('{commonpf}'));

End;

{ Method to create a page to ask for the scale of the text and graphics
  It is needed in the configuration file because current version of SDL 
  can not detect by itlsef. }
Procedure addScalePage;
Begin

  _scalePage := CreateInputQueryPage (_dataDirPage.ID,
    ExpandConstant ('{cm:windowSizeDialogTitle}'),
    ExpandConstant ('{cm:windowSizeDialogSubtitle}'),
    ExpandConstant ('{cm:windowSizeDialogCap}'));
  _scalePage.Add (ExpandConstant ('{cm:windowSizeScaleField}'), False);
  _scalePage.Values [0] := '1.0';

End;

{ Event shoot anytime the validation of the data dir is needed. 
  This is something that use to happen in many of the installers. }
Function validateDataDirAtNextButtonClick (): String;
Begin

  If (_dataDirPage.Values [0] = '') Then
    _dataDirPage.Values [0] := ExpandConstant ('{commonpf}');
  Result := '';

End;

{ Event shoot anytime the validation of the scale is needed. 
  This is something that use to happen in many of the installers. }
Function validateScaleAtNextButtonClick () : String;
Begin

  Result := '';
  If (StrToFloat (_scalePage.Values [0]) <= 0) Then
      Result := ExpandConstant ('{cm:windowSizeDialogError}');

End;

{ Event shoot aytime the validation of the license file is needed. }
Function validateLicenseFileAtNextButtonClick () : String;
Begin

  Result := ExpandConstant ('{cm:licensePageError}');
  If (FileExists (Trim (_licensePage.Values [0]))) Then
    Result := '';

End;

{ Function to get the name the full name of the license file. }
Function getLicenseFile () : String;
Begin
  Result := _licensePage.Values [0];
End;

{ Function used to get the value of the data directory selected 
  by the user. }
Function getDataDir (param: String): String;
Begin
  Result := _dataDirPage.Values [0];
End;

{ Function to change the value of a constant in a file
  This function is mostly used to define the configurtion data file.
  This function is executed after the instalation. }
Procedure changeTextInFile (fileName: String; text: String; textToChange: String);
Var
  _fileData: AnsiString;
  _data: String;

Begin
  
  If (LoadStringFromFile (fileName, _fileData)) Then
  Begin
    _data := _fileData;
    StringChangeEx (_data, text, textToChange, True);
    _fileData:= _data;
    SaveStringToFile (fileName, _fileData, False);
  End;

End;

{ End of code }
